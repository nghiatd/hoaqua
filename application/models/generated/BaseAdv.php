<?php

/**
 * BaseAdv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $link
 * @property string $location
 * @property string $type
 * @property integer $sort_order
 * @property string $time
 * @property string $file
 * @property integer $active
 * @property integer $view
 * @property integer $height
 * @property integer $width
 * @property integer $expire_day
 * @property integer $expire_count
 * @property timestamp $created_date
 * @property string $adv2page
 * @property string $country_code
 * @property integer $members_id
 * @property Members $Members
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseAdv extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('adv');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '255',
             ));
        $this->hasColumn('link', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '100',
             ));
        $this->hasColumn('location', 'string', 125, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '0',
             'length' => '125',
             ));
        $this->hasColumn('type', 'string', 125, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '0',
             'length' => '125',
             ));
        $this->hasColumn('sort_order', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => '4',
             ));
        $this->hasColumn('time', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('file', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '150',
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('view', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('height', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('width', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('expire_day', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('expire_count', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('created_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('adv2page', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('country_code', 'string', 125, array(
             'type' => 'string',
             'length' => '125',
             ));
        $this->hasColumn('members_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));


        $this->index('fk_adv_members1', array(
             'fields' => 
             array(
              0 => 'members_id',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Members', array(
             'local' => 'members_id',
             'foreign' => 'id'));
    }
}